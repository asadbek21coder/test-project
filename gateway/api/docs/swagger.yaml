definitions:
  models.ResponseModel:
    properties:
      code:
        type: integer
      data:
        type: object
      error:
        type: object
      message:
        type: string
    type: object
  service_1.Status:
    properties:
      status:
        type: string
    type: object
  service_2.GetAllResponse:
    properties:
      count:
        type: integer
      posts:
        items:
          $ref: '#/definitions/service_2.Post'
        type: array
    type: object
  service_2.Id:
    properties:
      id:
        type: integer
    type: object
  service_2.Post:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
  license: {}
paths:
  /v1/api:
    get:
      consumes:
      - application/json
      description: get and write
      operationId: write-posts
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/service_1.Status'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get and write posts ti DB
      tags:
      - service 1
  /v1/posts:
    delete:
      consumes:
      - application/json
      description: delete post
      operationId: delete-post
      parameters:
      - description: post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/service_2.Id'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/service_2.Id'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete post
      tags:
      - service 2
    get:
      consumes:
      - application/json
      description: get posts
      operationId: get-posts
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/service_2.GetAllResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get posts
      tags:
      - service 2
    put:
      consumes:
      - application/json
      description: update post
      operationId: update-post
      parameters:
      - description: post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/service_2.Post'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/service_2.Post'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update post
      tags:
      - service 2
  /v1/posts/{id}:
    get:
      consumes:
      - application/json
      description: GetById post
      operationId: getbyid-post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/service_2.Post'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: getById post
      tags:
      - service 2
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
